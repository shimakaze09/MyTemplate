FUNCTION(ADD_TARGET_GDR)
    CMAKE_PARSE_ARGUMENTS("ARG" "" "MODE;NAME" "SOURCES;LIBS_GENERAL;LIBS_DEBUG;LIBS_RELEASE" ${ARGN})

    MESSAGE(STATUS "--------------------------------------------------")

    MESSAGE(STATUS "- MODE: ${ARG_MODE}")
    MESSAGE(STATUS "- NAME: ${ARG_NAME}")
    MESSAGE(STATUS "- SOURCES:")
    FOREACH (SOURCE ${ARG_SOURCES})
        MESSAGE(STATUS "    ${SOURCE}")
    ENDFOREACH ()
    MESSAGE(STATUS "- LIBS:")
    MESSAGE(STATUS "  - GENERAL:")
    FOREACH (LIB ${ARG_LIBS_GENERAL})
        MESSAGE(STATUS "      ${LIB}")
    ENDFOREACH ()
    MESSAGE(STATUS "  - DEBUG:")
    FOREACH (LIB ${ARG_LIBS_DEBUG})
        MESSAGE(STATUS "      ${LIB}")
    ENDFOREACH ()
    MESSAGE(STATUS "  - RELEASE:")
    FOREACH (LIB ${ARG_LIBS_RELEASE})
        MESSAGE(STATUS "      ${LIB}")
    ENDFOREACH ()

    IF (SOURCES_NUM EQUAL 0)
        MESSAGE(WARNING "Target ${ARG_NAME} has no sources")
    ELSE ()
        SET(IS_SUPPORT ON)
        IF (${ARG_MODE} STREQUAL "EXE")
            ADD_EXECUTABLE(${ARG_NAME} ${ARG_SOURCES})
            IF (MSVC)
                SET_TARGET_PROPERTIES(${ARG_NAME} PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
            ENDIF ()
            SET_TARGET_PROPERTIES(${ARG_NAME} PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
        ELSEIF (${ARG_MODE} STREQUAL "LIB")
            ADD_LIBRARY(${ARG_NAME} ${ARG_SOURCES})
        ELSEIF (${ARG_MODE} STREQUAL "DLL")
            add_library(${ARG_NAME} SHARED ${ARG_SOURCES})
        ELSE ()
            MESSAGE(FATAL_ERROR "Unknown target mode: ${ARG_MODE}")
            SET(IS_SUPPORT OFF)
        ENDIF ()
        IF (IS_SUPPORT)
            IF (NOT ${FOLDER_NAME} STREQUAL " ")
                SET_TARGET_PROPERTIES(${ARG_NAME} PROPERTIES FOLDER ${FOLDER_NAME})
            ENDIF ()
            FOREACH (LIB ${ARG_LIBS_GENERAL})
                TARGET_LINK_LIBRARIES(${ARG_NAME} general ${LIB})
            ENDFOREACH ()
            FOREACH (LIB ${ARG_LIBS_DEBUG})
                TARGET_LINK_LIBRARIES(${ARG_NAME} debug ${LIB})
            ENDFOREACH ()
            FOREACH (LIB ${ARG_LIBS_RELEASE})
                TARGET_LINK_LIBRARIES(${ARG_NAME} optimized ${LIB})
            ENDFOREACH ()
            INSTALL(TARGETS ${ARG_NAME}
                    RUNTIME DESTINATION "bin"
                    ARCHIVE DESTINATION "lib/${FOLDER_NAME}"
                    LIBRARY DESTINATION "lib/${FOLDER_NAME}")
        ENDIF ()
    ENDIF ()

    MESSAGE(STATUS "--------------------------------------------------")
ENDFUNCTION()

FUNCTION(ADD_TARGET)
    CMAKE_PARSE_ARGUMENTS("ARG" "" "MODE;NAME" "SOURCES;LIBS" ${ARGN})
    ADD_TARGET_GDR(MODE ${ARG_MODE} NAME ${ARG_NAME} SOURCES ${ARG_SOURCES} LIBS_GENERAL ${ARG_LIBS} LIBS_DEBUG "" LIBS_RELEASE "")
ENDFUNCTION()

FUNCTION(ADD_SUB_DIRS)
    FILE(GLOB CHILDREN RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/*)
    SET(DIR_LIST "")
    FOREACH (CHILD ${CHILDREN})
        IF (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${CHILD})
            LIST(APPEND DIR_LIST ${CHILD})
        ENDIF ()
    ENDFOREACH ()
    FOREACH (SUB_DIR ${DIR_LIST})
        ADD_SUBDIRECTORY(${SUB_DIR})
    ENDFOREACH ()
ENDFUNCTION()

FUNCTION(GET_DIR_NAME DIR_NAME)
    STRING(REGEX MATCH "([^/]*)$" TMP ${CMAKE_CURRENT_SOURCE_DIR})
    SET(${DIR_NAME} ${TMP} PARENT_SCOPE)
ENDFUNCTION()

FUNCTION(QT_BEGIN)
    SET(CMAKE_AUTOMOC ON PARENT_SCOPE)
    SET(CMAKE_AUTOMOC ON PARENT_SCOPE)
    SET(CMAKE_AUTOMOC ON PARENT_SCOPE)
ENDFUNCTION()

FUNCTION(QT_END)
    SET(CMAKE_AUTOMOC OFF PARENT_SCOPE)
    SET(CMAKE_AUTOMOC OFF PARENT_SCOPE)
    SET(CMAKE_AUTOMOC OFF PARENT_SCOPE)
ENDFUNCTION()