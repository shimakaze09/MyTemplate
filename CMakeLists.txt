# Set the minimum required version of CMake
CMAKE_MINIMUM_REQUIRED(VERSION 3.20 FATAL_ERROR)

# Set the project
PROJECT(MyTemplate VERSION 1.0.0 LANGUAGES CXX)
MESSAGE(STATUS "Project: ${PROJECT_NAME} ${PROJECT_VERSION}")

# Set default build path prefix
IF (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    SET(CMAKE_INSTALL_PREFIX ${PROJECT_SOURCE_DIR} CACHE PATH "INSTALL PREFIX" FORCE)
ENDIF ()

# Add 'd' postfix for debug builds
SET(CMAKE_DEBUG_POSTFIX "d")

# Set C++ version
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

IF (MSVC)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /permissive-")
ENDIF ()

# Set the output directories
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/bin")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/lib")

# Turn on the Visual Studio folders
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

INCLUDE(FETCHCONTENT)
FIND_PACKAGE(MyCMake QUIET)
IF (${MyCMake_FOUND})
    MESSAGE(STATUS "MyCMake found")
ELSE ()
    MESSAGE(STATUS "MyCMake not found, fetching ...")
    FETCHCONTENT_DECLARE(
            MyCMake
            GIT_REPOSITORY https://github.com/shimakaze09/MyCMake.git
            GIT_TAG main
    )
    FETCHCONTENT_MAKEAVAILABLE(MyCMake)
ENDIF ()

INCLUDE_DIRECTORIES(
        ${PROJECT_SOURCE_DIR}/include
)

LINK_DIRECTORIES(
        ${PROJECT_SOURCE_DIR}/lib
)

ADD_SUB_DIRS(src)

EXPORT_TARGETS()
