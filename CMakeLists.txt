# Set the minimum required version of CMake
CMAKE_MINIMUM_REQUIRED(VERSION 3.20 FATAL_ERROR)

# Set the project
PROJECT(MyTemplate VERSION 1.0.0 LANGUAGES CXX)
MESSAGE(STATUS "Project: ${PROJECT_NAME} ${PROJECT_VERSION}")

# Set default build path prefix
IF (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    SET(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR} CACHE PATH "INSTALL PREFIX" FORCE)
ENDIF ()

# Add 'd' postfix for debug builds
SET(CMAKE_DEBUG_POSTFIX "d")

# Set C++ version
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

IF (MSVC)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /permissive-")
ENDIF ()

# Set the output directories
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/lib")

# Turn on the Visual Studio folders
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

INCLUDE(FETCHCONTENT)
FETCHCONTENT_DECLARE(
        MyGit
        GIT_REPOSITORY https://github.com/shimakaze09/MyGit.git
        GIT_TAG 41f06151c569012d5849ca4baa5dea0859a5e96f
)
FETCHCONTENT_MAKEAVAILABLE(MyGit)

INIT_GIT()
UPDATE_SUBMODULE()

LIST(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/external/MyCMake/cmake")
INCLUDE(Tools)

INCLUDE_DIRECTORIES(
        ${PROJECT_SOURCE_DIR}/include
        # $ENV{XXX_INCLUDE_PATH}
        # ...
)
LINK_DIRECTORIES(
        ${PROJECT_BINARY_DIR}/lib
        # $ENV{XXX_LIB_PATH}
        # ...
)

ADD_SUB_DIRS(src)
